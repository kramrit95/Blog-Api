<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.data.domain.Sort"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.query.Param"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.config.AppConstants"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.services.FileService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.web.multipart.MultipartFile"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="org.hibernate.engine.jdbc.StreamUtils"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.awt.PageAttributes.MediaType"/>
    <fullyQualifiedTypeName name="java.io.InputStream"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.repositories.PostRepo"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.repositories.CommentRepo"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.model.Post"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.payloads.CommentDto"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.model.Comment"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.services.CommentService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.payloads.ApiResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.security.JwtAuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.codewithamrit.blog.exceptions.ApiException"/>
</qualifiedTypeNameHistroy>
